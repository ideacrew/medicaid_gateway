############################################
###             Base image               ###
############################################

# Taken from .ruby-version
ARG RUBY_VERSION=2.7.6
FROM ruby:$RUBY_VERSION-slim-buster as base
LABEL author="IdeaCrew"

ENV USERNAME=medicaid_gateway

ARG DEBIAN_FRONTEND=noninteractive

# Taken from Gemfile.lock
ARG BUNDLER_VERSION=2.3.16

# Must be set as ENV variable to overrride the default
ENV BUNDLER_VERSION=$BUNDLER_VERSION

# Needed for Java install
# https://stackoverflow.com/questions/61815233/install-java-runtime-in-debian-based-docker-image
RUN mkdir -p /usr/share/man/man1 /usr/share/man/man2

RUN apt-get update -qq && \
    apt-get install -yq --no-install-recommends \
      curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && truncate -s 0 /var/log/*log

ARG NODE_MAJOR=14

# Add NodeJS to sources list
RUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -

# Only install what's needed that isn't in the base image
# https://github.com/docker-library/ruby/blob/master/2.7/slim-buster/Dockerfile
RUN apt-get update \
    && apt-get -yq dist-upgrade \
    && apt-get install -y \
      fontconfig \
      libffi6 \
      libsodium23 \
      libxext6 \
      libxrender1 \
      libyaml-cpp0.6 \
      nodejs \
      openjdk-11-jre \
      openssl \
      ruby-dalli \
      sshpass \
      unzip \
      zip \
      zlibc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && truncate -s 0 /var/log/*log

# Configure bundler and PATH, install bundler version
ENV GEM_HOME=/usr/local/bundle
ENV BUNDLE_PATH=$GEM_HOME
ENV BUNDLE_APP_CONFIG=$BUNDLE_PATH
ENV BUNDLE_BIN=/usr/local/bin
ENV BUNDLE_JOBS=4
ENV BUNDLE_RETRY=3

ENV LANG=C.UTF-8

ENV HOME=/medicaid_gateway

ENV PATH=$HOME/bin:$BUNDLE_BIN:$GEM_HOME/gems/bin:$PATH

# RUN gem update --system
RUN rm -f /usr/local/bin/ruby/gems/*/specifications/default/bundler-*.gemspec
RUN gem install bundler -v $BUNDLER_VERSION

RUN groupadd --gid 1001 $USERNAME \
  && useradd --uid 1001 --gid $USERNAME --shell /bin/bash --create-home $USERNAME

RUN mkdir $HOME \
  && chown -R $USERNAME:$USERNAME $HOME

# Configure app home directory
WORKDIR $HOME

ENV RAILS_ENV=production
ENV NODE_ENV=production

###############################################################################
###       Builder. Adds node and Yarn. Not necessary in production.         ###
###############################################################################

FROM base as builder

ARG DEBIAN_FRONTEND=noninteractive

# Add Yarn to the sources list
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

# Install Nodejs & Yarn
RUN apt-get update -qq \
  && apt-get install -yq --no-install-recommends \
    build-essential \
    git \
    libpq-dev \
    yarn \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log

########################################################
###          Node and Bundle for production          ###
########################################################

FROM builder as prod_gems_and_assets

ARG DEBIAN_FRONTEND=noninteractive

ARG HOSTNAME=localhost

# Defaults set for local builds, overwritten in GHA
ENV MEDICAID_GATEWAY_DB_HOST=${HOSTNAME}
ENV MEDICAID_GATEWAY_DB_PORT=27017
ENV MEDICAID_GATEWAY_DB_NAME=medicaid_gateway_production
ENV RABBITMQ_URL=amqp://${HOSTNAME}:5672
ENV RABBITMQ_URL_EVENT_SOURCE=amqp://${HOSTNAME}
ENV RABBITMQ_HOST=amqp://${HOSTNAME}

COPY --chown=$USERNAME:$USERNAME package.json $HOME/
COPY --chown=$USERNAME:$USERNAME yarn.lock $HOME/

RUN yarn install \
  && (rm -rf /tmp/* || true)

COPY --chown=$USERNAME:$USERNAME ./components/mitc_service/Gemfile $HOME/components/mitc_service/Gemfile
COPY --chown=$USERNAME:$USERNAME ./components/mitc_service/Gemfile.lock $HOME/components/mitc_service/Gemfile.lock
COPY --chown=$USERNAME:$USERNAME ./components/mitc_service/mitc_service.gemspec $HOME/components/mitc_service/mitc_service.gemspec
COPY --chown=$USERNAME:$USERNAME ./components/mitc_service/lib/mitc_service/version.rb $HOME/components/mitc_service/lib/mitc_service/version.rb

COPY --chown=$USERNAME:$USERNAME ./Gemfile $HOME/Gemfile
COPY --chown=$USERNAME:$USERNAME ./Gemfile.lock $HOME/Gemfile.lock

RUN apt-get update -qq \
  && apt-get install -yq --no-install-recommends \
  shared-mime-info \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log

RUN bundle config set --local without 'development test' \
  && bundle install

COPY --chown=$USERNAME:$USERNAME . $HOME
COPY --chown=$USERNAME:$USERNAME ./.docker/config/master.key $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/credentials.yml.enc $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/mongoid.yml $HOME/config
# The CLIENT variable is required to build an image specific to the client
ARG CLIENT

RUN bundle exec rake configuration:client_configuration_toggler client=$CLIENT
RUN bundle exec rake assets:precompile \
  && yarn cache clean \
  && (rm -rf /tmp/* || true) \
  # Cleanup
  && rm -rf $BUNDLE_PATH/*.gem \
  && find $BUNDLE_PATH/ruby -name "*.c" -delete \
  && find $BUNDLE_PATH/ruby -name "*.o" -delete \
  && find $BUNDLE_PATH/ruby -name ".git"  -type d -prune -execdir rm -rf {} +

# https://github.com/rubygems/rubygems/issues/3225
RUN rm -rf $GEM_HOME/bundle/ruby/*/cache

# Cleanup stuff?

################################################################
###                     Deployable image                     ###
################################################################

FROM base as deploy

ARG HOSTNAME=localhost

# Defaults set for local builds, overwritten in GHA
ENV MEDICAID_GATEWAY_DB_AUTH=true
ENV MEDICAID_GATEWAY_DB_HOST=${HOSTNAME}
ENV MEDICAID_GATEWAY_DB_NAME=medicaid_gateway_production
ENV MEDICAID_GATEWAY_DB_PASSWORD=anything
ENV MEDICAID_GATEWAY_DB_PORT=27017
ENV MEDICAID_GATEWAY_DB_REPLICA_SET_NAME=anything
ENV MEDICAID_GATEWAY_DB_USERNAME=anything
ENV RABBITMQ_HOST=amqp://${HOSTNAME}
ENV RABBITMQ_URL_EVENT_SOURCE=amqp://${HOSTNAME}
ENV RABBITMQ_URL=amqp://${HOSTNAME}:5672

# Copy prebuilt gems
COPY --chown=$USERNAME:$USERNAME --from=prod_gems_and_assets $BUNDLE_PATH $BUNDLE_PATH

# Copy all app code again (sans gems, node_modules, assets)
COPY --chown=$USERNAME:$USERNAME . $HOME

# Copy prebuilt assets
COPY --chown=$USERNAME:$USERNAME --from=prod_gems_and_assets $HOME/public $HOME/public

# Copy state-specific configs
COPY --chown=$USERNAME:$USERNAME --from=prod_gems_and_assets $HOME/system/config $HOME/system/config

# Copy environment-based config files
COPY --chown=$USERNAME:$USERNAME ./.docker/config/mongoid.yml $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/production.rb $HOME/config/environments
COPY --chown=$USERNAME:$USERNAME ./.docker/config/unicorn.rb $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/credentials.yml.enc $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/master.key $HOME/config

USER $USERNAME

################################################################
###                    Reports image                         ###
################################################################

FROM deploy as reports

USER root

RUN curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o "awscliv2.zip" && unzip awscliv2.zip && ./aws/install && rm awscliv2.zip 

USER $USERNAME
