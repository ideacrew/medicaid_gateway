name: Docs and RSpec
on: push

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - name: Cache Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-medicaid_gateway-gems-mitc-service-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-medicaid_gateway-gems-mitc-service-${{ hashFiles('**/Gemfile.lock') }}
      - name: bundle install
        run: |
          gem update --system
          bundle config path vendor/bundle
          bundle install
      - name: Run rubocop
        run: bundle exec rubocop
  mitc_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: "4.2"
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
      - name: Cache Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-medicaid_gateway-gems-mitc-service-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-medicaid_gateway-gems-mitc_service-${{ hashFiles('**/Gemfile.lock') }}
      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install
          cd components/mitc_service
          bundle config path ../../vendor/bundle
          bundle install
      - name: run tests
        run: |
          echo
          cd components/mitc_service
          sudo bash -c "echo '127.0.0.1 rabbitmq mongodb' >> /etc/hosts"
          bundle exec rspec
  rspec:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --name "rabbitmq"
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - run: |
          docker exec rabbitmq rabbitmqctl add_vhost /
          docker exec rabbitmq rabbitmqctl add_vhost event_source
          docker exec rabbitmq rabbitmqctl set_permissions -p event_source guest ".*" ".*" ".*"
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: "4.2"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
      - name: Cache Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-medicaid_gateway-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-medicaid_gateway-gems-${{ hashFiles('**/Gemfile.lock') }}
      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v12-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v12-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          yarn install
      - name: run webpack
        run: |
          echo bundle config
          bundle config path vendor/bundle
          NODE_ENV=test RAILS_ENV=test ./bin/webpack
      # - name: set etc host
      #   run: sudo bash -c "echo '127.0.0.1 rabbitmq mongodb' >> /etc/hosts"
      - name: run tests
        run: bundle exec rspec
